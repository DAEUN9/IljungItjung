plugins {
	id 'org.springframework.boot' version '2.7.4'
	id 'io.spring.dependency-management' version '1.0.14.RELEASE'
	id 'java'
}

group = 'com'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}

	all {
		exclude group : 'org.springframework.boot', module : 'spring-boot-starter-logging'
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'junit:junit:4.13.1'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	implementation 'org.springframework.boot:spring-boot-starter-log4j2'

	testImplementation 'org.springframework.security:spring-security-test'

	implementation 'com.google.guava:guava:30.1.1-jre'

}

test {
	useJUnitPlatform()
}

sourceSets {
	iljitjTest {
		java.srcDir "$projectDir/src/iljitjTest/controller"
		java.srcDir "$projectDir/src/iljitjTest/service"
		resources.srcDir "$projectDir/src/iljitjTest/resources"
		compileClasspath += main.output + test.output
		runtimeClasspath += main.output + test.output
	}
}

configurations {
	iljitjTestImplementation.extendsFrom implementation
	iljitjTestImplementation.extendsFrom testImplementation
	iljitjTestRuntimeOnly.extendsFrom testRuntimeOnly
}

task iljitjTest(type: Test) {
	testClassesDirs = sourceSets.iljitjTest.output.classesDirs
	classpath = sourceSets.iljitjTest.runtimeClasspath
	useJUnitPlatform()
}

check.dependsOn iljitjTest